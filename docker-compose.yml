version: '3'

services:
  api:
    container_name: api
    restart: always
#    build: ./docker/api
    image: kgantsov/todogo_api:latest
    env_file: .environment
#    volumes:
#      - ./docker/api/:/app/
    expose:
      - "8080/tcp"
    ports:
      - "8080:8080"
    links:
      - cockroach:cockroach
    depends_on:
      - cockroach
    networks:
      - frontend
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
      restart_policy:
        condition: on-failure
    command: /app/todogo

#  postgres:
#    container_name: postgres
#    restart: always
#    build: ./docker/postgres
#    volumes:
#      - postgresdatavolume:/var/lib/postgresql
#    ports:
#      - "5432:5432"
#    expose:
#      - "5432/tcp"

  cockroach:
    container_name: cockroach
    restart: always
    image: cockroachdb/cockroach:latest
    volumes:
      - cockroachdatavolume:/cockroach/cockroach-data
    ports:
      - "26257:26257"
    expose:
      - "26257/tcp"
    networks:
      - backend
    command: start --insecure

  psql:
    container_name: psql

    image: jbergknoff/postgresql-client

  web:
    container_name: web
    restart: always
    image: kgantsov/todogo_cljs:latest
    env_file: .environment
    volumes:
      - ./resources/public/:/public/
    expose:
      - "80/tcp"
    ports:
      - "80:80"
    links:
      - api:api
    depends_on:
      - api
    networks:
      - frontend
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure

networks:
  frontend:
  backend:

volumes:
  postgresdatavolume:
    driver: local

  cockroachdatavolume:
      driver: local
